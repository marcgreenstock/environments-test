name: Build

on:
  workflow_call:
    inputs:
      regions:
        required: true
        type: string
      sha:
        required: true
        type: string
      tag:
        required: false
        type: string

jobs:
  image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.sha }}
      - name: Docker build
        run: |
          docker build \
          -t test-image \
          .
      - name: Docker save
        run: |
          docker save test-image > /tmp/image.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar
  prep-matrix:
    name: Prepare matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          matrix=$(echo '${{ inputs.regions }}' | sed -r 's/ /\n/g' | jq -Rsc 'split("\n")[:-1]')
          echo "::set-output name=matrix::$(echo $matrix)"
  push:
    name: Push and Tag
    needs: [image, prep-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ${{ fromJSON(needs.prep-matrix.outputs.matrix) }}
    environment: ${{ matrix.region }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.sha }}
      - run: |
          yarn install
      - id: resolve-region
        uses: ./.github/actions/resolve-region
        with:
          region: ${{ matrix.region }}
      - name: Download image artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp
      - name: Docker load
        run: |
          docker load --input /tmp/image.tar
      - name: Docker image ls
        run: |
          docker image ls -a
      - name: Tag image
        run: |
          echo 'Tagging image with ${{ inputs.tag || inputs.sha }} at ${{ steps.resolve-region.outputs.region }}'